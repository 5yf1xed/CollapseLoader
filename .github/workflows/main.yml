name: Build
on:
  push:
    branches:
    - dev

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.2

      - name: Install requirements
        run: |
          pip install -r requirements.txt

      - name: Make Build
        run: |
            echo "Using version ${{ env.VERSION }} in the build script."
            python builder.py


      - name: Set artifact path/name
        run: |
          $ARTIFACT_PATH=Get-ChildItem -Path .\ -Filter "CollapseLoader*.exe"  -Recurse | Select-Object -ExpandProperty Name | Split-Path -Leaf
          echo "ARTIFACT_PATH=$ARTIFACT_PATH" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
          
          $ARTIFACT_HASH=git rev-parse --short HEAD
          echo "ARTIFACT_HASH=$ARTIFACT_HASH" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

          $commitHash = git rev-parse --short HEAD

          Get-ChildItem -Path .\ -Filter "CollapseLoader*.exe" | ForEach-Object {
              $ARTIFACT_PATH = "CollapseLoader_$commitHash.exe"
              echo "ARTIFACT_PATH=$ARTIFACT_PATH" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
              Rename-Item -Path $_.FullName -NewName $ARTIFACT_PATH
          }

          echo $ARTIFACT_PATH

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: CollapseLoader (${{ env.ARTIFACT_HASH }})
          path: ${{ env.ARTIFACT_PATH }}

      - name: Upload build via FTP
        run: |
          echo Uploading build via FTP
          $ftpUri = "ftp://${{ secrets.SERVER_IP }}/builds/${{ env.ARTIFACT_PATH }}"
          
          $ftpRequest = [System.Net.FtpWebRequest]::Create($ftpUri)
          $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::UploadFile
          
          
          $ftpRequest.Credentials = New-Object System.Net.NetworkCredential("${{ secrets.FTP_USERNAME }}","${{ secrets.FTP_PASSWORD }}")
          $ftpRequest.UseBinary = $true
          $ftpRequest.UsePassive = $true
          
          
          $fileContent = [System.IO.File]::ReadAllBytes("${{ env.ARTIFACT_PATH }}")
          
          
          $ftpRequest.ContentLength = $fileContent.Length
          
          
          $requestStream = $ftpRequest.GetRequestStream()
          $requestStream.Write($fileContent, 0, $fileContent.Length)
          $requestStream.Close()
          
          
          $response = $ftpRequest.GetResponse()
          $response.Dispose()
          
          echo Uploading done!
